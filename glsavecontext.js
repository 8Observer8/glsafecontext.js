if(window["WebGLRenderingContext"]) {
window["WebGLRenderingContext"]["prototype"]["getSaveContext"] = 
(function (){
	"use strict"; 

	// var METHODS ... 
	/* This is autogenerated. Don't eddit by hand. */
	var METHODS = {
	    "getContextAttributes": {
	        "returnType": "WebGLContextAttributes",
	        "args": []
	    },
	    "isContextLost": {
	        "returnType": "boolean",
	        "args": []
	    },
	    "getSupportedExtensions": {
	        "returnType": "DOMString",
	        "args": []
	    },
	    "getExtension": {
	        "returnType": "object",
	        "args": [{
	            "name": "name",
	            "type": "DOMString"
	        }]
	    },
	    "activeTexture": {
	        "returnType": "void",
	        "args": [{
	            "name": "texture",
	            "type": "GLenum"
	        }]
	    },
	    "attachShader": {
	        "returnType": "void",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "shader",
	            "type": "WebGLShader"
	        }]
	    },
	    "bindAttribLocation": {
	        "returnType": "void",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "index",
	            "type": "GLuint"
	        }, {
	            "name": "name",
	            "type": "DOMString"
	        }]
	    },
	    "bindBuffer": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "buffer",
	            "type": "WebGLBuffer"
	        }]
	    },
	    "bindFramebuffer": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "framebuffer",
	            "type": "WebGLFramebuffer"
	        }]
	    },
	    "bindRenderbuffer": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "renderbuffer",
	            "type": "WebGLRenderbuffer"
	        }]
	    },
	    "bindTexture": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "texture",
	            "type": "WebGLTexture"
	        }]
	    },
	    "blendColor": {
	        "returnType": "void",
	        "args": [{
	            "name": "red",
	            "type": "GLclampf"
	        }, {
	            "name": "green",
	            "type": "GLclampf"
	        }, {
	            "name": "blue",
	            "type": "GLclampf"
	        }, {
	            "name": "alpha",
	            "type": "GLclampf"
	        }]
	    },
	    "blendEquation": {
	        "returnType": "void",
	        "args": [{
	            "name": "mode",
	            "type": "GLenum"
	        }]
	    },
	    "blendEquationSeparate": {
	        "returnType": "void",
	        "args": [{
	            "name": "modeRGB",
	            "type": "GLenum"
	        }, {
	            "name": "modeAlpha",
	            "type": "GLenum"
	        }]
	    },
	    "blendFunc": {
	        "returnType": "void",
	        "args": [{
	            "name": "sfactor",
	            "type": "GLenum"
	        }, {
	            "name": "dfactor",
	            "type": "GLenum"
	        }]
	    },
	    "blendFuncSeparate": {
	        "returnType": "void",
	        "args": [{
	            "name": "srcRGB",
	            "type": "GLenum"
	        }, {
	            "name": "dstRGB",
	            "type": "GLenum"
	        }, {
	            "name": "srcAlpha",
	            "type": "GLenum"
	        }, {
	            "name": "dstAlpha",
	            "type": "GLenum"
	        }]
	    },
	    "bufferData": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "size",
	            "type": "GLsizeiptr"
	        }, {
	            "name": "usage",
	            "type": "GLenum"
	        }]
	    },
	    "bufferSubData": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "offset",
	            "type": "GLintptr"
	        }, {
	            "name": "data",
	            "type": "ArrayBufferView"
	        }]
	    },
	    "checkFramebufferStatus": {
	        "returnType": "GLenum",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }]
	    },
	    "clear": {
	        "returnType": "void",
	        "args": [{
	            "name": "mask",
	            "type": "GLbitfield"
	        }]
	    },
	    "clearColor": {
	        "returnType": "void",
	        "args": [{
	            "name": "red",
	            "type": "GLclampf"
	        }, {
	            "name": "green",
	            "type": "GLclampf"
	        }, {
	            "name": "blue",
	            "type": "GLclampf"
	        }, {
	            "name": "alpha",
	            "type": "GLclampf"
	        }]
	    },
	    "clearDepth": {
	        "returnType": "void",
	        "args": [{
	            "name": "depth",
	            "type": "GLclampf"
	        }]
	    },
	    "clearStencil": {
	        "returnType": "void",
	        "args": [{
	            "name": "s",
	            "type": "GLint"
	        }]
	    },
	    "colorMask": {
	        "returnType": "void",
	        "args": [{
	            "name": "red",
	            "type": "GLboolean"
	        }, {
	            "name": "green",
	            "type": "GLboolean"
	        }, {
	            "name": "blue",
	            "type": "GLboolean"
	        }, {
	            "name": "alpha",
	            "type": "GLboolean"
	        }]
	    },
	    "compileShader": {
	        "returnType": "void",
	        "args": [{
	            "name": "shader",
	            "type": "WebGLShader"
	        }]
	    },
	    "copyTexImage2D": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "level",
	            "type": "GLint"
	        }, {
	            "name": "internalformat",
	            "type": "GLenum"
	        }, {
	            "name": "x",
	            "type": "GLint"
	        }, {
	            "name": "y",
	            "type": "GLint"
	        }, {
	            "name": "width",
	            "type": "GLsizei"
	        }, {
	            "name": "height",
	            "type": "GLsizei"
	        }, {
	            "name": "border",
	            "type": "GLint"
	        }]
	    },
	    "copyTexSubImage2D": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "level",
	            "type": "GLint"
	        }, {
	            "name": "xoffset",
	            "type": "GLint"
	        }, {
	            "name": "yoffset",
	            "type": "GLint"
	        }, {
	            "name": "x",
	            "type": "GLint"
	        }, {
	            "name": "y",
	            "type": "GLint"
	        }, {
	            "name": "width",
	            "type": "GLsizei"
	        }, {
	            "name": "height",
	            "type": "GLsizei"
	        }]
	    },
	    "createBuffer": {
	        "returnType": "WebGLBuffer",
	        "args": []
	    },
	    "createFramebuffer": {
	        "returnType": "WebGLFramebuffer",
	        "args": []
	    },
	    "createProgram": {
	        "returnType": "WebGLProgram",
	        "args": []
	    },
	    "createRenderbuffer": {
	        "returnType": "WebGLRenderbuffer",
	        "args": []
	    },
	    "createShader": {
	        "returnType": "WebGLShader",
	        "args": [{
	            "name": "type",
	            "type": "GLenum"
	        }]
	    },
	    "createTexture": {
	        "returnType": "WebGLTexture",
	        "args": []
	    },
	    "cullFace": {
	        "returnType": "void",
	        "args": [{
	            "name": "mode",
	            "type": "GLenum"
	        }]
	    },
	    "deleteBuffer": {
	        "returnType": "void",
	        "args": [{
	            "name": "buffer",
	            "type": "WebGLBuffer"
	        }]
	    },
	    "deleteFramebuffer": {
	        "returnType": "void",
	        "args": [{
	            "name": "framebuffer",
	            "type": "WebGLFramebuffer"
	        }]
	    },
	    "deleteProgram": {
	        "returnType": "void",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }]
	    },
	    "deleteRenderbuffer": {
	        "returnType": "void",
	        "args": [{
	            "name": "renderbuffer",
	            "type": "WebGLRenderbuffer"
	        }]
	    },
	    "deleteShader": {
	        "returnType": "void",
	        "args": [{
	            "name": "shader",
	            "type": "WebGLShader"
	        }]
	    },
	    "deleteTexture": {
	        "returnType": "void",
	        "args": [{
	            "name": "texture",
	            "type": "WebGLTexture"
	        }]
	    },
	    "depthFunc": {
	        "returnType": "void",
	        "args": [{
	            "name": "func",
	            "type": "GLenum"
	        }]
	    },
	    "depthMask": {
	        "returnType": "void",
	        "args": [{
	            "name": "flag",
	            "type": "GLboolean"
	        }]
	    },
	    "depthRange": {
	        "returnType": "void",
	        "args": [{
	            "name": "zNear",
	            "type": "GLclampf"
	        }, {
	            "name": "zFar",
	            "type": "GLclampf"
	        }]
	    },
	    "detachShader": {
	        "returnType": "void",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "shader",
	            "type": "WebGLShader"
	        }]
	    },
	    "disable": {
	        "returnType": "void",
	        "args": [{
	            "name": "cap",
	            "type": "GLenum"
	        }]
	    },
	    "disableVertexAttribArray": {
	        "returnType": "void",
	        "args": [{
	            "name": "index",
	            "type": "GLuint"
	        }]
	    },
	    "drawArrays": {
	        "returnType": "void",
	        "args": [{
	            "name": "mode",
	            "type": "GLenum"
	        }, {
	            "name": "first",
	            "type": "GLint"
	        }, {
	            "name": "count",
	            "type": "GLsizei"
	        }]
	    },
	    "drawElements": {
	        "returnType": "void",
	        "args": [{
	            "name": "mode",
	            "type": "GLenum"
	        }, {
	            "name": "count",
	            "type": "GLsizei"
	        }, {
	            "name": "type",
	            "type": "GLenum"
	        }, {
	            "name": "offset",
	            "type": "GLintptr"
	        }]
	    },
	    "enable": {
	        "returnType": "void",
	        "args": [{
	            "name": "cap",
	            "type": "GLenum"
	        }]
	    },
	    "enableVertexAttribArray": {
	        "returnType": "void",
	        "args": [{
	            "name": "index",
	            "type": "GLuint"
	        }]
	    },
	    "finish": {
	        "returnType": "void",
	        "args": []
	    },
	    "flush": {
	        "returnType": "void",
	        "args": []
	    },
	    "framebufferRenderbuffer": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "attachment",
	            "type": "GLenum"
	        }, {
	            "name": "renderbuffertarget",
	            "type": "GLenum"
	        }, {
	            "name": "renderbuffer",
	            "type": "WebGLRenderbuffer"
	        }]
	    },
	    "framebufferTexture2D": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "attachment",
	            "type": "GLenum"
	        }, {
	            "name": "textarget",
	            "type": "GLenum"
	        }, {
	            "name": "texture",
	            "type": "WebGLTexture"
	        }, {
	            "name": "level",
	            "type": "GLint"
	        }]
	    },
	    "frontFace": {
	        "returnType": "void",
	        "args": [{
	            "name": "mode",
	            "type": "GLenum"
	        }]
	    },
	    "generateMipmap": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }]
	    },
	    "getActiveAttrib": {
	        "returnType": "WebGLActiveInfo",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "index",
	            "type": "GLuint"
	        }]
	    },
	    "getActiveUniform": {
	        "returnType": "WebGLActiveInfo",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "index",
	            "type": "GLuint"
	        }]
	    },
	    "getAttachedShaders": {
	        "returnType": "WebGLShader",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }]
	    },
	    "getAttribLocation": {
	        "returnType": "GLint",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "name",
	            "type": "DOMString"
	        }]
	    },
	    "getParameter": {
	        "returnType": "any",
	        "args": [{
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "getBufferParameter": {
	        "returnType": "any",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "getError": {
	        "returnType": "GLenum",
	        "args": []
	    },
	    "getFramebufferAttachmentParameter": {
	        "returnType": "any",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "attachment",
	            "type": "GLenum"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "getProgramParameter": {
	        "returnType": "any",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "getProgramInfoLog": {
	        "returnType": "DOMString",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }]
	    },
	    "getRenderbufferParameter": {
	        "returnType": "any",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "getShaderParameter": {
	        "returnType": "any",
	        "args": [{
	            "name": "shader",
	            "type": "WebGLShader"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "getShaderInfoLog": {
	        "returnType": "DOMString",
	        "args": [{
	            "name": "shader",
	            "type": "WebGLShader"
	        }]
	    },
	    "getShaderSource": {
	        "returnType": "DOMString",
	        "args": [{
	            "name": "shader",
	            "type": "WebGLShader"
	        }]
	    },
	    "getTexParameter": {
	        "returnType": "any",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "getUniform": {
	        "returnType": "any",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }]
	    },
	    "getUniformLocation": {
	        "returnType": "WebGLUniformLocation",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }, {
	            "name": "name",
	            "type": "DOMString"
	        }]
	    },
	    "getVertexAttrib": {
	        "returnType": "any",
	        "args": [{
	            "name": "index",
	            "type": "GLuint"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "getVertexAttribOffset": {
	        "returnType": "GLsizeiptr",
	        "args": [{
	            "name": "index",
	            "type": "GLuint"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }]
	    },
	    "hint": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "mode",
	            "type": "GLenum"
	        }]
	    },
	    "isBuffer": {
	        "returnType": "GLboolean",
	        "args": [{
	            "name": "buffer",
	            "type": "WebGLBuffer"
	        }]
	    },
	    "isEnabled": {
	        "returnType": "GLboolean",
	        "args": [{
	            "name": "cap",
	            "type": "GLenum"
	        }]
	    },
	    "isFramebuffer": {
	        "returnType": "GLboolean",
	        "args": [{
	            "name": "framebuffer",
	            "type": "WebGLFramebuffer"
	        }]
	    },
	    "isProgram": {
	        "returnType": "GLboolean",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }]
	    },
	    "isRenderbuffer": {
	        "returnType": "GLboolean",
	        "args": [{
	            "name": "renderbuffer",
	            "type": "WebGLRenderbuffer"
	        }]
	    },
	    "isShader": {
	        "returnType": "GLboolean",
	        "args": [{
	            "name": "shader",
	            "type": "WebGLShader"
	        }]
	    },
	    "isTexture": {
	        "returnType": "GLboolean",
	        "args": [{
	            "name": "texture",
	            "type": "WebGLTexture"
	        }]
	    },
	    "lineWidth": {
	        "returnType": "void",
	        "args": [{
	            "name": "width",
	            "type": "GLfloat"
	        }]
	    },
	    "linkProgram": {
	        "returnType": "void",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }]
	    },
	    "pixelStorei": {
	        "returnType": "void",
	        "args": [{
	            "name": "pname",
	            "type": "GLenum"
	        }, {
	            "name": "param",
	            "type": "GLint"
	        }]
	    },
	    "polygonOffset": {
	        "returnType": "void",
	        "args": [{
	            "name": "factor",
	            "type": "GLfloat"
	        }, {
	            "name": "units",
	            "type": "GLfloat"
	        }]
	    },
	    "readPixels": {
	        "returnType": "void",
	        "args": [{
	            "name": "x",
	            "type": "GLint"
	        }, {
	            "name": "y",
	            "type": "GLint"
	        }, {
	            "name": "width",
	            "type": "GLsizei"
	        }, {
	            "name": "height",
	            "type": "GLsizei"
	        }, {
	            "name": "format",
	            "type": "GLenum"
	        }, {
	            "name": "type",
	            "type": "GLenum"
	        }, {
	            "name": "pixels",
	            "type": "ArrayBufferView"
	        }]
	    },
	    "renderbufferStorage": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "internalformat",
	            "type": "GLenum"
	        }, {
	            "name": "width",
	            "type": "GLsizei"
	        }, {
	            "name": "height",
	            "type": "GLsizei"
	        }]
	    },
	    "sampleCoverage": {
	        "returnType": "void",
	        "args": [{
	            "name": "value",
	            "type": "GLclampf"
	        }, {
	            "name": "invert",
	            "type": "GLboolean"
	        }]
	    },
	    "scissor": {
	        "returnType": "void",
	        "args": [{
	            "name": "x",
	            "type": "GLint"
	        }, {
	            "name": "y",
	            "type": "GLint"
	        }, {
	            "name": "width",
	            "type": "GLsizei"
	        }, {
	            "name": "height",
	            "type": "GLsizei"
	        }]
	    },
	    "shaderSource": {
	        "returnType": "void",
	        "args": [{
	            "name": "shader",
	            "type": "WebGLShader"
	        }, {
	            "name": "source",
	            "type": "DOMString"
	        }]
	    },
	    "stencilFunc": {
	        "returnType": "void",
	        "args": [{
	            "name": "func",
	            "type": "GLenum"
	        }, {
	            "name": "ref",
	            "type": "GLint"
	        }, {
	            "name": "mask",
	            "type": "GLuint"
	        }]
	    },
	    "stencilFuncSeparate": {
	        "returnType": "void",
	        "args": [{
	            "name": "face",
	            "type": "GLenum"
	        }, {
	            "name": "func",
	            "type": "GLenum"
	        }, {
	            "name": "ref",
	            "type": "GLint"
	        }, {
	            "name": "mask",
	            "type": "GLuint"
	        }]
	    },
	    "stencilMask": {
	        "returnType": "void",
	        "args": [{
	            "name": "mask",
	            "type": "GLuint"
	        }]
	    },
	    "stencilMaskSeparate": {
	        "returnType": "void",
	        "args": [{
	            "name": "face",
	            "type": "GLenum"
	        }, {
	            "name": "mask",
	            "type": "GLuint"
	        }]
	    },
	    "stencilOp": {
	        "returnType": "void",
	        "args": [{
	            "name": "fail",
	            "type": "GLenum"
	        }, {
	            "name": "zfail",
	            "type": "GLenum"
	        }, {
	            "name": "zpass",
	            "type": "GLenum"
	        }]
	    },
	    "stencilOpSeparate": {
	        "returnType": "void",
	        "args": [{
	            "name": "face",
	            "type": "GLenum"
	        }, {
	            "name": "fail",
	            "type": "GLenum"
	        }, {
	            "name": "zfail",
	            "type": "GLenum"
	        }, {
	            "name": "zpass",
	            "type": "GLenum"
	        }]
	    },
	    "texImage2D": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "level",
	            "type": "GLint"
	        }, {
	            "name": "internalformat",
	            "type": "GLenum"
	        }, {
	            "name": "width",
	            "type": "GLsizei"
	        }, {
	            "name": "height",
	            "type": "GLsizei"
	        }, {
	            "name": "border",
	            "type": "GLint"
	        }, {
	            "name": "format",
	            "type": "GLenum"
	        }, {
	            "name": "type",
	            "type": "GLenum"
	        }, {
	            "name": "pixels",
	            "type": "ArrayBufferView"
	        }]
	    },
	    "texParameterf": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }, {
	            "name": "param",
	            "type": "GLfloat"
	        }]
	    },
	    "texParameteri": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "pname",
	            "type": "GLenum"
	        }, {
	            "name": "param",
	            "type": "GLint"
	        }]
	    },
	    "texSubImage2D": {
	        "returnType": "void",
	        "args": [{
	            "name": "target",
	            "type": "GLenum"
	        }, {
	            "name": "level",
	            "type": "GLint"
	        }, {
	            "name": "xoffset",
	            "type": "GLint"
	        }, {
	            "name": "yoffset",
	            "type": "GLint"
	        }, {
	            "name": "width",
	            "type": "GLsizei"
	        }, {
	            "name": "height",
	            "type": "GLsizei"
	        }, {
	            "name": "format",
	            "type": "GLenum"
	        }, {
	            "name": "type",
	            "type": "GLenum"
	        }, {
	            "name": "pixels",
	            "type": "ArrayBufferView"
	        }]
	    },
	    "uniform1f": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "x",
	            "type": "GLfloat"
	        }]
	    },
	    "uniform1fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "v",
	            "type": "FloatArray"
	        }]
	    },
	    "uniform1i": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "x",
	            "type": "GLint"
	        }]
	    },
	    "uniform1iv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "v",
	            "type": "Int32Array"
	        }]
	    },
	    "uniform2f": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "x",
	            "type": "GLfloat"
	        }, {
	            "name": "y",
	            "type": "GLfloat"
	        }]
	    },
	    "uniform2fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "v",
	            "type": "FloatArray"
	        }]
	    },
	    "uniform2i": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "x",
	            "type": "GLint"
	        }, {
	            "name": "y",
	            "type": "GLint"
	        }]
	    },
	    "uniform2iv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "v",
	            "type": "Int32Array"
	        }]
	    },
	    "uniform3f": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "x",
	            "type": "GLfloat"
	        }, {
	            "name": "y",
	            "type": "GLfloat"
	        }, {
	            "name": "z",
	            "type": "GLfloat"
	        }]
	    },
	    "uniform3fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "v",
	            "type": "FloatArray"
	        }]
	    },
	    "uniform3i": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "x",
	            "type": "GLint"
	        }, {
	            "name": "y",
	            "type": "GLint"
	        }, {
	            "name": "z",
	            "type": "GLint"
	        }]
	    },
	    "uniform3iv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "v",
	            "type": "Int32Array"
	        }]
	    },
	    "uniform4f": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "x",
	            "type": "GLfloat"
	        }, {
	            "name": "y",
	            "type": "GLfloat"
	        }, {
	            "name": "z",
	            "type": "GLfloat"
	        }, {
	            "name": "w",
	            "type": "GLfloat"
	        }]
	    },
	    "uniform4fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "v",
	            "type": "FloatArray"
	        }]
	    },
	    "uniform4i": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "x",
	            "type": "GLint"
	        }, {
	            "name": "y",
	            "type": "GLint"
	        }, {
	            "name": "z",
	            "type": "GLint"
	        }, {
	            "name": "w",
	            "type": "GLint"
	        }]
	    },
	    "uniform4iv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "v",
	            "type": "Int32Array"
	        }]
	    },
	    "uniformMatrix2fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "transpose",
	            "type": "GLboolean"
	        }, {
	            "name": "value",
	            "type": "FloatArray"
	        }]
	    },
	    "uniformMatrix3fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "transpose",
	            "type": "GLboolean"
	        }, {
	            "name": "value",
	            "type": "FloatArray"
	        }]
	    },
	    "uniformMatrix4fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "location",
	            "type": "WebGLUniformLocation"
	        }, {
	            "name": "transpose",
	            "type": "GLboolean"
	        }, {
	            "name": "value",
	            "type": "FloatArray"
	        }]
	    },
	    "useProgram": {
	        "returnType": "void",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }]
	    },
	    "validateProgram": {
	        "returnType": "void",
	        "args": [{
	            "name": "program",
	            "type": "WebGLProgram"
	        }]
	    },
	    "vertexAttrib1f": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "x",
	            "type": "GLfloat"
	        }]
	    },
	    "vertexAttrib1fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "values",
	            "type": "FloatArray"
	        }]
	    },
	    "vertexAttrib2f": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "x",
	            "type": "GLfloat"
	        }, {
	            "name": "y",
	            "type": "GLfloat"
	        }]
	    },
	    "vertexAttrib2fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "values",
	            "type": "FloatArray"
	        }]
	    },
	    "vertexAttrib3f": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "x",
	            "type": "GLfloat"
	        }, {
	            "name": "y",
	            "type": "GLfloat"
	        }, {
	            "name": "z",
	            "type": "GLfloat"
	        }]
	    },
	    "vertexAttrib3fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "values",
	            "type": "FloatArray"
	        }]
	    },
	    "vertexAttrib4f": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "x",
	            "type": "GLfloat"
	        }, {
	            "name": "y",
	            "type": "GLfloat"
	        }, {
	            "name": "z",
	            "type": "GLfloat"
	        }, {
	            "name": "w",
	            "type": "GLfloat"
	        }]
	    },
	    "vertexAttrib4fv": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "values",
	            "type": "FloatArray"
	        }]
	    },
	    "vertexAttribPointer": {
	        "returnType": "void",
	        "args": [{
	            "name": "indx",
	            "type": "GLuint"
	        }, {
	            "name": "size",
	            "type": "GLint"
	        }, {
	            "name": "type",
	            "type": "GLenum"
	        }, {
	            "name": "normalized",
	            "type": "GLboolean"
	        }, {
	            "name": "stride",
	            "type": "GLsizei"
	        }, {
	            "name": "offset",
	            "type": "GLintptr"
	        }]
	    },
	    "viewport": {
	        "returnType": "void",
	        "args": [{
	            "name": "x",
	            "type": "GLint"
	        }, {
	            "name": "y",
	            "type": "GLint"
	        }, {
	            "name": "width",
	            "type": "GLsizei"
	        }, {
	            "name": "height",
	            "type": "GLsizei"
	        }]
	    }
	};
	


	var typeChecker = {
		"ArrayBufferView" : isArrayBuffer,
		"ArrayBuffer" : isArrayBuffer,
		"WebGLBuffer" : checkType("WebGLBuffer"), 
		"WebGLFrameBuffer" : checkType("WebGLFrameBuffer"), 
		"WebGLProgram" : checkType("WebGLProgram"), 
		"WebGLRenderbuffer" : checkType("WebGLRenderbuffer"), 
		"WebGLShader" : checkType("WebGLShader"), 
		"WebGLTexture" : checkType("WebGLTexture"), 
		"WebGLUniformLocation" : checkType("WebGLUniformLocation"), 
		"FloatArray" : isFloatArray, 
		"Int32Array" : isInt32Array, 
		"DOMString" : isString, 
	    "GLbitfield" : isInt, 
		"GLboolean" : isBool, 
		"GLclampf" : isClampf, 
		"GLenum" : isInt, 
		"GLfloat" : isFloat, 
		"GLint" : isInt, 
		"GLintptr" : isInt, 
		"GLsizei" : isInt, 
		"GLsizeiptr" : isSizeiptr, 
		"GLuint" : isInt
	};

	return function() { return safeContext(this); };  

	function safeContext (gl) { 
		var key, value, i, pair, safegl, map, keys; 

		keys = []; 

		for	(key in gl) {
			if(key === "getSaveContext") {
				continue; //ignore myself
			}
			keys.push(key); 
		}

		map = keys.map(function(k) {
			var val, type; 
			val = gl[k]; 
			type = typeof val; 

			if(type === "function") {
				return [k, createSafeCaller(gl, val, k)]; 
			}
			return [k]; 
		});

		safegl = {}; 

		//Add static properties. 
		for(i = 0; i != map.length; i++) {
			pair = map[i]; 
			key = pair[0]; 
			value = pair[1]; 
		
			if(typeof value === "function") {
				//override behaviour with my own function 
				safegl[key] = value; 
			} else {
				(function(key) { 
					//same behaviour as the original gl context. 
					Object.defineProperty(safegl, key, {
						get : function() { return gl[key]; }, 
						set : function(v) { gl[key] = v; }, 
						enumerable : true 
					}); 
				}(key)); 
			}
		}

		return safegl; 
	}

	function createSafeCaller (gl, func, funcname) {
		var referenceFuncDef = METHODS[funcname]; 
		if( !referenceFuncDef ) {
			console.warn("glSaveContext.js: couldn't find reference definition for method " + funcname + "."); 
			//default behaviour
			return function() {
				return func.apply(gl, arguments); 	
			};
		}

		return function() {
			var i, arg, ret, type, name; 
			//check Arguments 
			//check Length			
			if(referenceFuncDef.args.length !== arguments.length) {
				throw new Error("function " + funcname + " was called with the wrong amount of arguments. " + arguments.length + " instead of " + referenceFuncDef.args.length + "."); 
			}
			
			//check if type is undefined
			for( i=0; i != arguments.length; i++) {
				arg = arguments[i]; 
				type = referenceFuncDef.args[i].type; 
				name = referenceFuncDef.args[i].name; 

				if(!typeChecker[type](arg)) {
					throw new Error("Argument " + name + " in function " + funcname + " was expected to be " + type + " but instead was called with " + arg  + "."); 
				}
			}
			//call original function 
			ret = func.apply(gl, arguments); 

			//TODO Test return value. 

			return ret;
		};
	}

	// ~~~ Type checking methods ~~~  
	function checkType(type) {
		return function(v) {
			return v === null || toType(v) === type.toLowerCase(); 
		}
	}

	function isArrayBuffer(v) {
		return isFloatArray(v) || isInt32Array(v) || toType(v) === "arraybuffer" || toType(v) === "arraybufferview"; 
	}

	function isFloatArray(v) {
		if(toType(v) === "floatarray" || toType(v) === "float32array") 
			return true;

		if(toType(v) === "array") {
			for(var i = 0; i != v.length; i++) {
				if(!isFloat(v)) {
					return false; 
				}
			}
			return true; 
		}

		return false; 
	}
	
	function isInt32Array(v) {
		if(toType(v) === "int32array") 
			return true; 

		if(toType(v) === "array") {
			for(var i = 0; i != v.length; i++) {
				if(!isInt(v)) {
					return false; 
				}
			}
			return true; 
		}

		return false; 
	}

	function isString(v) {
		return v === null || typeof v === "string"; 
	}

	function isFloat(v) {
		return typeof v === "number"; 
	}

	function isInt(v) {
		return typeof v === "number" && v === (~~v); 
	}

	function isSizeiptr(v) {
		return isInt(v) || isArrayBuffer(v); 
	}

	function isBool(v) {
		return v === true || v === false; 
	}

	function isClampf(v) {
		return isFloat(v) && v >= 0 && v <= 1; 
	}
	
	//Fixing typeof http://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/ 
	function toType (obj) {
		return ({}).toString.call(obj).match(/\s([a-zA-Z0-9]+)/)[1].toLowerCase();
	}

}()); 
}


